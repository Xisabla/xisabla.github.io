{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["// ---- Methods --------------------------------------------------------------------------\n\n/**\n * Add \"current\" class to navbar link corresponding to the current section\n * @param navbarLinks All navbar links with corresponding section id\n * @param sections All sections with corresponding id as name and top offset as top\n * @param force If set on true, will force updating the navbar links even if it shouldn't have any change\n * @returns\n */\nfunction updateNavbarSection(navbarLinks, sections, force = false) {\n\tconst scrollY = window.scrollY\n\n\t// All sections above the scrollY limit, the last one is the current section\n\tconst aboveSections = sections.filter((section) => section.top <= scrollY)\n\n\t// Skip on error\n\tif (aboveSections.length === 0) return\n\n\tconst currentSection = aboveSections[aboveSections.length - 1]\n\tconst previousCurrentLink = navbarLinks.filter(\n\t\t(item) => item.a.classList.contains('current') && item.section !== currentSection.id\n\t)\n\n\t// No change, skip if not on initialize step\n\tif (previousCurrentLink.length === 0 && !force) return\n\n\t// Remove current class on previous items\n\tpreviousCurrentLink.forEach((item) => item.a.classList.remove('current'))\n\n\t// Current item changed, add current class to new item\n\tconst currentLink = navbarLinks.find((item) => item.section === currentSection.id)\n\tif (currentLink) currentLink.a.classList.add('current')\n}\n\n// ---- Elements -------------------------------------------------------------------------\n\nconst navbar = document.querySelector('nav#main-nav')\n\nconst navbarItems = [...navbar.querySelectorAll('a')]\n\t.filter((item) => item.getAttribute('href').startsWith('#'))\n\t.map((a) => ({ section: a.getAttribute('href').slice(1), a }))\n\nconst sections = [...document.querySelectorAll('section')].map((section) => ({\n\tid: section.id,\n\tsection,\n\ttop: section.offsetTop,\n}))\n\n// ---- Events ---------------------------------------------------------------------------\n\nwindow.addEventListener('scroll', () => {\n\t// Skip cases\n\tif (navbarItems.length === 0) return\n\tif (sections.length === 0) return\n\tif (window.scrollY < 0) return\n\n\tupdateNavbarSection(navbarItems, sections)\n})\n\n// ---- Sky rocket -----------------------------------------------------------------------\n\n// Initialize navbar section update\nupdateNavbarSection(navbarItems, sections, true)\n\nconsole.log('\uD83D\uDE80')\n"],
  "mappings": "MASA,WAA6B,EAAa,EAAU,EAAQ,GAAO,CAClE,GAAM,GAAU,OAAO,QAGjB,EAAgB,EAAS,OAAO,AAAC,GAAY,EAAQ,KAAO,GAGlE,GAAI,EAAc,SAAW,EAAG,OAEhC,GAAM,GAAiB,EAAc,EAAc,OAAS,GACtD,EAAsB,EAAY,OACvC,AAAC,GAAS,EAAK,EAAE,UAAU,SAAS,YAAc,EAAK,UAAY,EAAe,IAInF,GAAI,EAAoB,SAAW,GAAK,CAAC,EAAO,OAGhD,EAAoB,QAAQ,AAAC,GAAS,EAAK,EAAE,UAAU,OAAO,YAG9D,GAAM,GAAc,EAAY,KAAK,AAAC,GAAS,EAAK,UAAY,EAAe,IAC/E,AAAI,GAAa,EAAY,EAAE,UAAU,IAAI,WAK9C,GAAM,GAAS,SAAS,cAAc,gBAEhC,EAAc,CAAC,GAAG,EAAO,iBAAiB,MAC9C,OAAO,AAAC,GAAS,EAAK,aAAa,QAAQ,WAAW,MACtD,IAAI,AAAC,GAAO,EAAE,QAAS,EAAE,aAAa,QAAQ,MAAM,GAAI,OAEpD,EAAW,CAAC,GAAG,SAAS,iBAAiB,YAAY,IAAI,AAAC,GAAa,EAC5E,GAAI,EAAQ,GACZ,UACA,IAAK,EAAQ,aAKd,OAAO,iBAAiB,SAAU,IAAM,CAEvC,AAAI,EAAY,SAAW,GACvB,EAAS,SAAW,GACpB,QAAO,QAAU,GAErB,EAAoB,EAAa,MAMlC,EAAoB,EAAa,EAAU,IAE3C,QAAQ,IAAI",
  "names": []
}
